"use strict";(self.webpackChunkcsugulo_github_io=self.webpackChunkcsugulo_github_io||[]).push([[660],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),i=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=i(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=i(t),m=a,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return t?r.createElement(g,c(c({ref:n},u),{},{components:t})):r.createElement(g,c({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,c[1]=l;for(var i=2;i<o;i++)c[i]=t[i];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5045:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var r=t(7462),a=(t(7294),t(3905));const o={slug:"run-elasticsearch-cluster-on-docker",title:"\u5728docker\u4e0a\u8fd0\u884celasticsearch\u96c6\u7fa4",tags:["elasticsearch","kibana","docker"]},c=void 0,l={permalink:"/blog/run-elasticsearch-cluster-on-docker",editUrl:"https://github.com/csugulo/csugulo.github.io/tree/main/blog/2022/07/run-elasticsearch-cluster-on-docker.md",source:"@site/blog/2022/07/run-elasticsearch-cluster-on-docker.md",title:"\u5728docker\u4e0a\u8fd0\u884celasticsearch\u96c6\u7fa4",description:"\u5728docker\u4e0a\u8fd0\u884c\u4e00\u4e2a3\u8282\u70b9elasticsearch+kibana\u96c6\u7fa4",date:"2022-07-02T11:08:09.066Z",formattedDate:"July 2, 2022",tags:[{label:"elasticsearch",permalink:"/blog/tags/elasticsearch"},{label:"kibana",permalink:"/blog/tags/kibana"},{label:"docker",permalink:"/blog/tags/docker"}],readingTime:.57,truncated:!1,authors:[],frontMatter:{slug:"run-elasticsearch-cluster-on-docker",title:"\u5728docker\u4e0a\u8fd0\u884celasticsearch\u96c6\u7fa4",tags:["elasticsearch","kibana","docker"]},nextItem:{title:"\u6811\u8393\u6d3e+OpenWrt+ClashX\u5b9e\u73b0\u65c1\u8def\u7531\u79d1\u5b66\u4e0a\u7f51",permalink:"/blog/raspberry-pi-openwrt-bypass-router-with-clashx"}},s={authorsImageUrls:[]},i=[{value:"\u96c6\u7fa4\u914d\u7f6e",id:"\u96c6\u7fa4\u914d\u7f6e",level:2},{value:"\u4f7f\u7528",id:"\u4f7f\u7528",level:2}],u={toc:i};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u5728docker\u4e0a\u8fd0\u884c\u4e00\u4e2a3\u8282\u70b9elasticsearch+kibana\u96c6\u7fa4"),(0,a.kt)("h2",{id:"\u96c6\u7fa4\u914d\u7f6e"},"\u96c6\u7fa4\u914d\u7f6e"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# docker-compose.yml\nversion: '2'\nnetworks:\n    esnet:\n        driver: bridge\n\nservices:\n    node-0:\n        image: bitnami/elasticsearch:8\n        environment:\n            - ELASTICSEARCH_CLUSTER_NAME=es-cluster\n            - ELASTICSEARCH_CLUSTER_HOSTS=node-0,node-1,node-2\n            - ELASTICSEARCH_NODE_NAME=node-0\n            - ELASTICSEARCH_HEAP_SIZE=4g\n        ports:\n            - '9200:9200'\n            - '9300:9300'\n        networks:\n            - esnet\n\n    node-1:\n        image: bitnami/elasticsearch:8\n        environment:\n            - ELASTICSEARCH_CLUSTER_NAME=es-cluster\n            - ELASTICSEARCH_CLUSTER_HOSTS=node-0,node-1,node-2\n            - ELASTICSEARCH_NODE_NAME=node-1\n            - ELASTICSEARCH_HEAP_SIZE=4g\n        networks:\n            - esnet\n    \n    node-2:\n        image: bitnami/elasticsearch:8\n        environment:\n            - ELASTICSEARCH_CLUSTER_NAME=es-cluster\n            - ELASTICSEARCH_CLUSTER_HOSTS=node-0,node-1,node-2\n            - ELASTICSEARCH_NODE_NAME=node-2\n            - ELASTICSEARCH_HEAP_SIZE=4g\n        networks:\n            - esnet\n    \n    kibana:\n        image: bitnami/kibana:8\n        environment:\n            - KIBANA_ELASTICSEARCH_URL=node-0\n        ports:\n            - '5601:5601'\n        depends_on:\n            - node-0\n            - node-1\n            - node-2\n        networks:\n            - esnet\n")),(0,a.kt)("h2",{id:"\u4f7f\u7528"},"\u4f7f\u7528"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u542f\u52a8")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose up -d\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u505c\u7528")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose stop\n")))}p.isMDXComponent=!0}}]);